apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana-loki
  namespace: prometheus
spec:
  interval: 30m
  chart:
    spec:
      chart: loki
      version: "2.10.2"
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: prometheus
      interval: 5m
  values:
    test_pod:
      enabled: true
      image: bats/bats:1.8.2
      pullPolicy: IfNotPresent

    loki:
      enabled: true
      isDefault: true
      url: http://{{(include "loki.serviceName" .)}}:{{ .Values.loki.service.port }}
      readinessProbe:
        httpGet:
          path: /ready
          port: http-metrics
        initialDelaySeconds: 45
      livenessProbe:
        httpGet:
          path: /ready
          port: http-metrics
        initialDelaySeconds: 45
      datasource:
        jsonData: "{}"
        uid: ""

      compactor:
        enabled: true

      structuredConfig:
        ingester:
          # Disable chunk transfer which is not possible with statefulsets
          # and unnecessary for boltdb-shipper
          max_transfer_retries: 0
          chunk_idle_period: 1h
          chunk_target_size: 1536000
          max_chunk_age: 1h
        storage_config:
          aws:
            s3: s3://minio-svc.prometheus.svc:9000
            bucketnames: bucket1
            # AWS region to use.
            # CLI flag: -<prefix>.storage.s3.region
            region: ""
            # AWS Access Key ID
            # CLI flag: -<prefix>.storage.s3.access-key-id
            access_key_id: "5KwbLTjY1HGVAP19FbFz"
            # AWS Secret Access Key
            # CLI flag: -<prefix>.storage.s3.secret-access-key
            secret_access_key: "n1wb16TdBnGgXO8pTAo0ZImRXAU3qz5l3k7LffNC"
            # AWS Session Token
            # CLI flag: -<prefix>.storage.s3.session-token
            session_token: ""
            # Disable https on s3 connection.
            # CLI flag: -<prefix>.storage.s3.insecure
            insecure: true
          boltdb_shipper:
            shared_store: s3
        schema_config:
          configs:
            - from: 2020-09-07
              store: boltdb-shipper
              object_store: aws
              schema: v11
              index:
                prefix: loki_index_
                period: 24h

        ruler:
          enabled: true
          directories:
            fake:
              rules.txt: |
                groups:
                  - name: should_fire
                    rules:
                      - alert: HighPercentageError
                        expr: |
                          sum(rate({app="loki"} |= "error" [5m])) by (job)
                            /
                          sum(rate({app="loki"}[5m])) by (job)
                            > 0.05
                        for: 10m
                        labels:
                          severity: warning
                        annotations:
                          summary: High error percentage

    promtail:
      enabled: true
      config:
        logLevel: info
        serverPort: 3101
        clients:
          - url: http://{{ .Release.Name }}:3100/loki/api/v1/push

    fluent-bit:
      enabled: false

    grafana:
      enabled: false
      sidecar:
        datasources:
          label: ""
          labelValue: ""
          enabled: true
          maxLines: 1000
      image:
        tag: 10.3.3

    prometheus:
      enabled: false
      isDefault: false
      url: http://{{ include "prometheus.fullname" .}}:{{ .Values.prometheus.server.service.servicePort }}{{ .Values.prometheus.server.prefixURL }}
      datasource:
        jsonData: "{}"

    filebeat:
      enabled: false
      filebeatConfig:
        filebeat.yml: |
          # logging.level: debug
          filebeat.inputs:
          - type: container
            paths:
              - /var/log/containers/*.log
            processors:
            - add_kubernetes_metadata:
                host: ${NODE_NAME}
                matchers:
                - logs_path:
                    logs_path: "/var/log/containers/"
          output.logstash:
            hosts: ["logstash-loki:5044"]

    logstash:
      enabled: false
      image: grafana/logstash-output-loki
      imageTag: 1.0.1
      filters:
        main: |-
          filter {
            if [kubernetes] {
              mutate {
                add_field => {
                  "container_name" => "%{[kubernetes][container][name]}"
                  "namespace" => "%{[kubernetes][namespace]}"
                  "pod" => "%{[kubernetes][pod][name]}"
                }
                replace => { "host" => "%{[kubernetes][node][name]}"}
              }
            }
            mutate {
              remove_field => ["tags"]
            }
          }
      outputs:
        main: |-
          output {
            loki {
              url => "http://loki:3100/loki/api/v1/push"
              #username => "test"
              #password => "test"
            }
            # stdout { codec => rubydebug }
          }

    # proxy is currently only used by loki test pod
    # Note: If http_proxy/https_proxy are set, then no_proxy should include the
    # loki service name, so that tests are able to communicate with the loki
    # service.
    proxy:
      http_proxy: ""
      https_proxy: ""
      no_proxy: ""